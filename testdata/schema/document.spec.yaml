target: 'lidySchemaDocument'
content:
  - name: detect invalid self-references in documents
    content:
      - flag: PENDING
        name: reject if the self-reference is too direct
        content:
          - text: |-
              main: plant
              piece:
                _in: [grass, leaf, branch, tree]
              plant:
                _oneOf:
                  - plant
                  - piece
            errorContains: plant
          - text: |-
              main: aa
              aa: { _merge: [bb] }
              bb: { _oneOf: [aa, cc] }
              cc: string
            errorContains: aa
          - text: |-
              main: animal
              animal: animal
            errorContains: animal
          - text: |-
              main: main
            errorContains: main
          - text: |-
              main: weather
              weather:
                _merge: [rain, cloud]
              rain:
                _merge: [water, cloud]
              cloud:
                _merge: [water, rain]
              water:
                _map:
                  temperature: float
            errorContains: cloud
      - name: accept if the self-reference is sufficiently indirect
        text:
          - |-
              main:
                _listFacultative: [main]
          - |-
              main:
                _mapFacultative: { content: main }
          - |-
              main: animal
              animal:
                _map:
                  name: string
                  age: string
                  eat: edible
              edible:
                _oneOf:
                  - _in: [grass, leaves]
                  - animal
          - |-
              main: person
              person:
                _map:
                  name: string
                  mother: person
                  father: person
      - name: accept indirect even if no finite schema can be matched
        text:
          - |-
              main:
                _list: [main]
          - |-
              main:
                _listOf: main
          - |-
              main:
                _map: { content: main }
          - |-
              main:
                _mapOf: { main: main }
          - |-
              main:
                _mapOf: { string: main }
  - name: tell valid documents from invalid ones
    content:
      - flag: PENDING
        name: reject if a reference cannot be resolved
        text: 'main: animal'
        errorContains: animal
      - flag: PENDING
        name: reject if the target rule (main) is missing
        text: 'animal: string'
        errorContains: main
      - name: accept if the document is valid
        text: |-
          main: animal
          animal: string
